version: '3.8'

services:
  # External Gateway (simulates internet)
  external-gw:
    image: vyos:1.5
    container_name: external-gw
    hostname: external-gw
    privileged: true
    networks:
      external:
        ipv4_address: 192.168.1.1
      core-pe1:
        ipv4_address: 10.1.0.1
    volumes:
      - ./configs/external-gw.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped

  # Core Network Routers
  core-1:
    image: vyos:1.5
    container_name: core-1
    hostname: core-1
    privileged: true
    networks:
      core-pe1:
        ipv4_address: 10.1.1.2
      core-backbone:
        ipv4_address: 10.1.2.2
      core-backup:
        ipv4_address: 10.1.4.1
    volumes:
      - ./configs/core-1.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - external-gw

  core-2:
    image: vyos:1.5
    container_name: core-2
    hostname: core-2
    privileged: true
    networks:
      core-backbone:
        ipv4_address: 10.1.2.1
      core-pe2:
        ipv4_address: 10.1.3.2
      core-backup:
        ipv4_address: 10.1.4.2
    volumes:
      - ./configs/core-2.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - core-1

  # Provider Edge Routers
  pe-1:
    image: vyos:1.5
    container_name: pe-1
    hostname: pe-1
    privileged: true
    networks:
      core-pe1:
        ipv4_address: 10.1.1.1
      access-agg1:
        ipv4_address: 10.1.10.1
      customer-a:
        ipv4_address: 172.16.1.1
      customer-b:
        ipv4_address: 172.17.1.1
    volumes:
      - ./configs/pe-1.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - core-1

  pe-2:
    image: vyos:1.5
    container_name: pe-2
    hostname: pe-2
    privileged: true
    networks:
      core-pe2:
        ipv4_address: 10.1.3.1
      access-agg2:
        ipv4_address: 10.1.20.1
    volumes:
      - ./configs/pe-2.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - core-2

  # Access Aggregation Routers
  agg-1:
    image: vyos:1.5
    container_name: agg-1
    hostname: agg-1
    privileged: true
    networks:
      access-agg1:
        ipv4_address: 10.1.10.2
      cpe-network-1:
        ipv4_address: 10.10.1.1
    volumes:
      - ./configs/agg-1.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - pe-1

  agg-2:
    image: vyos:1.5
    container_name: agg-2
    hostname: agg-2
    privileged: true
    networks:
      access-agg2:
        ipv4_address: 10.1.20.2
      cpe-network-2:
        ipv4_address: 10.10.2.1
    volumes:
      - ./configs/agg-2.conf:/config/config.boot:ro
    command: /sbin/init
    restart: unless-stopped
    depends_on:
      - pe-2

  # CPE Devices (Customer Premises Equipment)
  cpe-1:
    image: alpine:latest
    container_name: cpe-1
    hostname: cpe-1
    networks:
      cpe-network-1:
        ipv4_address: 10.10.1.10
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl &&
        echo 'CPE-1 ready for testing' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - agg-1

  cpe-2:
    image: alpine:latest
    container_name: cpe-2
    hostname: cpe-2
    networks:
      cpe-network-2:
        ipv4_address: 10.10.2.10
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl &&
        echo 'CPE-2 ready for testing' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - agg-2

  cpe-3:
    image: alpine:latest
    container_name: cpe-3
    hostname: cpe-3
    networks:
      cpe-network-1:
        ipv4_address: 10.10.1.11
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl &&
        echo 'CPE-3 ready for testing' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - agg-1

  cpe-4:
    image: alpine:latest
    container_name: cpe-4
    hostname: cpe-4
    networks:
      cpe-network-2:
        ipv4_address: 10.10.2.11
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl &&
        echo 'CPE-4 ready for testing' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - agg-2

  # Customer Edge Routers (for VPN testing)
  customer-a-ce:
    image: alpine:latest
    container_name: customer-a-ce
    hostname: customer-a-ce
    networks:
      customer-a:
        ipv4_address: 172.16.1.10
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl quagga &&
        echo 'Customer A CE ready' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - pe-1

  customer-b-ce:
    image: alpine:latest
    container_name: customer-b-ce
    hostname: customer-b-ce
    networks:
      customer-b:
        ipv4_address: 172.17.1.10
    command: >
      sh -c "
        apk add --no-cache iperf3 tcpdump curl quagga &&
        echo 'Customer B CE ready' &&
        tail -f /dev/null
      "
    restart: unless-stopped
    depends_on:
      - pe-1

  # Monitoring and Management
  monitoring:
    image: prom/prometheus:latest
    container_name: telco-monitoring
    hostname: monitoring
    networks:
      management:
        ipv4_address: 192.168.100.10
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

networks:
  # External network (simulates internet)
  external:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.254

  # Core network segments
  core-pe1:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.1.0/30

  core-backbone:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.2.0/30

  core-pe2:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.3.0/30

  core-backup:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.4.0/30

  # Access networks
  access-agg1:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.10.0/30

  access-agg2:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.20.0/30

  # CPE networks
  cpe-network-1:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.1.0/24

  cpe-network-2:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.2.0/24

  # Customer VPN networks
  customer-a:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.1.0/24

  customer-b:
    driver: bridge
    ipam:
      config:
        - subnet: 172.17.1.0/24

  # Management network
  management:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  prometheus_data:
